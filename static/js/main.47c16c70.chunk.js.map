{"version":3,"sources":["components/EditButtons.js","components/CardEditor.js","components/Card.js","components/ListEditor.js","components/List.js","components/AddList.js","components/Board.js","components/App.js","reportWebVitals.js","store.js","seed.js","index.js"],"names":["EditButtons","handleSave","saveLabel","handleDelete","handleCancel","className","tabIndex","style","backgroundColor","onClick","marginLeft","name","CardEditor","state","text","props","handleChangeText","event","setState","target","value","onEnter","e","keyCode","preventDefault","onSave","this","onCancel","onDelete","adding","autoFocus","placeholder","onChange","onKeyDown","Component","Card","hover","editing","startHover","endHover","startEditing","card","endEditing","editCard","a","dispatch","type","payload","cardId","_id","cardText","deleteCard","listId","window","confirm","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","connect","ownProps","cardsById","ListEditor","React","createRef","toogleEditing","saveList","handleClick","node","current","console","log","contains","onClickOutside","document","addEventListener","removeEventListener","title","handleChangeTitle","deleteList","width","List","editingTitle","list","addingCard","toggleAddingCard","addCard","shortid","generate","toggleEditingTitle","editListTitle","listTitle","cards","droppableId","_snapshot","map","listsById","AddList","createList","toggleAddingList","Board","addingList","handleDragEnd","source","destination","sourceListId","destListId","oldCardIndex","newCardIndex","oldListIndex","newListIndex","board","onDragEnd","direction","lists","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","newLists","Array","from","splice","removedList","filterDeleted","tmpListId","filter","restOfLists","newCards","removedCard","sourceCards","destinationCards","deletedCardId","restOfCards","cardIds","Object","keys","includes","reduce","newState","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","throttle","stringify","setItem","saveState","getState","length","firstListId","secondListId","seed","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.47c16c70.chunk.js","sourcesContent":["import \"../styles/EditButtons.css\";\n\nimport React from \"react\";\n\nconst EditButtons = ({ handleSave, saveLabel, handleDelete, handleCancel }) => (\n  <div className=\"Edit-Buttons\">\n    <div\n      tabIndex=\"0\"\n      className=\"Edit-Button\"\n      style={{ backgroundColor: \"#5aac44\" }}\n      onClick={handleSave}\n    >\n      {saveLabel}\n    </div>\n    {handleDelete && (\n      <div\n        tabIndex=\"0\"\n        className=\"Edit-Button\"\n        style={{ backgroundColor: \"#EA2525\", marginLeft: 0 }}\n        onClick={handleDelete}\n      >\n        Delete\n      </div>\n    )}\n    <div tabIndex=\"0\" className=\"Edit-Button-Cancel\" onClick={handleCancel}>\n      <ion-icon name=\"close\" />\n    </div>\n  </div>\n);\n\nexport default EditButtons;\n","import \"../styles/CardEditor.css\";\n\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\n\nclass CardEditor extends Component {\n  state = {\n    text: this.props.text || \"\"\n  };\n\n  handleChangeText = event => this.setState({ text: event.target.value });\n\n  onEnter = e => {\n    const { text } = this.state;\n\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.onSave(text);\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    const { onSave, onCancel, onDelete, adding } = this.props;\n\n    return (\n      <div className=\"Edit-Card\">\n        <div className=\"Card\">\n          <TextareaAutosize\n            autoFocus\n            className=\"Edit-Card-Textarea\"\n            placeholder=\"Enter the text for this card...\"\n            value={text}\n            onChange={this.handleChangeText}\n            onKeyDown={this.onEnter}\n          />\n        </div>\n        <EditButtons\n          handleSave={() => onSave(text)}\n          saveLabel={adding ? \"Add card\" : \"Save\"}\n          handleDelete={onDelete}\n          handleCancel={onCancel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CardEditor;\n","import \"../styles/Card.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport CardEditor from \"./CardEditor\";\n\nclass Card extends Component {\n  state = {\n    hover: false,\n    editing: false\n  };\n\n  startHover = () => this.setState({ hover: true });\n  endHover = () => this.setState({ hover: false });\n\n  startEditing = () =>\n    this.setState({\n      hover: false,\n      editing: true,\n      text: this.props.card.text\n    });\n\n  endEditing = () => this.setState({ hover: false, editing: false });\n\n  editCard = async text => {\n    const { card, dispatch } = this.props;\n\n    this.endEditing();\n\n    dispatch({\n      type: \"CHANGE_CARD_TEXT\",\n      payload: { cardId: card._id, cardText: text }\n    });\n  };\n\n  deleteCard = async () => {\n    const { listId, card, dispatch } = this.props;\n\n    if (window.confirm(\"Are you sure to delete this card?\")) {\n      dispatch({\n        type: \"DELETE_CARD\",\n        payload: { cardId: card._id, listId }\n      });\n    }\n  };\n\n  render() {\n    const { card, index } = this.props;\n    const { hover, editing } = this.state;\n\n    if (!editing) {\n      return (\n        <Draggable draggableId={card._id} index={index}>\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className=\"Card\"\n              onMouseEnter={this.startHover}\n              onMouseLeave={this.endHover}\n            >\n\n            <div className=\"Card-Icons\">\n              <div className=\"Card-Icon\" onClick={this.startEditing}>\n                <ion-icon name=\"create\" />\n              </div>\n            </div>\n\n              {card.text}\n            </div>\n          )}\n        </Draggable>\n      );\n    } else {\n      return (\n        <CardEditor\n          text={card.text}\n          onSave={this.editCard}\n          onDelete={this.deleteCard}\n          onCancel={this.endEditing}\n        />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(Card);\n","import \"../styles/ListEditor.css\";\n\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nclass ListEditor extends Component {\n  ref = React.createRef();\n\n  state = {\n    toogleEditing: false\n  };\n\n  onEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.setState({toogleEditing : false});\n      this.props.saveList();\n    }\n  };\n\n  handleClick = e => {\n    const node = this.ref.current;\n    console.log(node, e);\n    if (node.contains(e.target)) {\n      console.log(\"return from edit\");\n      return;\n    }\n    const {toogleEditing} = this.state;\n    if (!toogleEditing){\n      this.setState({toogleEditing : true});\n    } else {\n      this.setState({toogleEditing : false});\n      this.props.onClickOutside();\n    }\n  };\n\n  componentDidMount() {\n    console.log(\"editlist\");\n    document.addEventListener(\"click\", this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClick, false);\n  }\n\n  render() {\n    const { title, handleChangeTitle, deleteList } = this.props;\n\n    return (\n      <div className=\"List-Title-Edit\" ref={this.ref}>\n        <TextareaAutosize\n          autoFocus\n          className=\"List-Title-Textarea\"\n          placeholder=\"Enter list title...\"\n          value={title}\n          onChange={handleChangeTitle}\n          onKeyDown={this.onEnter}\n          style={{ width: deleteList ? 220 : 245 }}\n        />\n        <div className=\"Card-Icon\" onClick={deleteList}>\n          <ion-icon name=\"trash\"  />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListEditor;\n","import \"../styles/List.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport ListEditor from \"./ListEditor\";\n\nimport shortid from \"shortid\";\n\nclass List extends Component {\n  state = {\n    editingTitle: false,\n    title: this.props.list.title,\n    addingCard: false\n  };\n\n  toggleAddingCard = () =>\n    this.setState({ addingCard: !this.state.addingCard });\n\n  addCard = async cardText => {\n    const { listId, dispatch } = this.props;\n\n    this.toggleAddingCard();\n\n    const cardId = shortid.generate();\n\n    dispatch({\n      type: \"ADD_CARD\",\n      payload: { cardText, cardId, listId }\n    });\n  };\n\n  toggleEditingTitle = () =>\n    this.setState({ editingTitle: !this.state.editingTitle });\n\n  handleChangeTitle = e => this.setState({ title: e.target.value });\n\n  editListTitle = async () => {\n    const { listId, dispatch } = this.props;\n    const { title } = this.state;\n    console.log(\"editing list\", this.props);\n    this.toggleEditingTitle();\n\n    dispatch({\n      type: \"CHANGE_LIST_TITLE\",\n      payload: { listId, listTitle: title }\n    });\n  };\n\n  deleteList = async () => {\n    const { listId, list, dispatch } = this.props;\n    console.log(\"deleting list\");\n    if (window.confirm(\"Are you sure to delete this list?\")) {\n      dispatch({\n        type: \"DELETE_LIST\",\n        payload: {listId, cards: list.cards}\n      });\n    }\n  };\n\n  render() {\n    const { list, index } = this.props;\n    const { editingTitle, addingCard, title } = this.state;\n\n    return (\n      <Draggable draggableId={list._id} index={index}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className=\"List\"\n          >\n            {editingTitle ? (\n              <ListEditor\n                list={list}\n                title={title}\n                handleChangeTitle={this.handleChangeTitle}\n                saveList={this.editListTitle}\n                onClickOutside={this.editListTitle}\n                deleteList={this.deleteList}\n              />\n            ) : (\n              <div className=\"List-Title\" onClick={this.toggleEditingTitle}>\n                {list.title}\n              </div>\n            )}\n\n            <Droppable droppableId={list._id}>\n              {(provided, _snapshot) => (\n                <div ref={provided.innerRef} className=\"Lists-Cards\">\n                  {list.cards &&\n                    list.cards.map((cardId, index) => (\n                      <Card\n                        key={cardId}\n                        cardId={cardId}\n                        index={index}\n                        listId={list._id}\n                      />\n                    ))}\n\n                  {provided.placeholder}\n\n                  {addingCard ? (\n                    <CardEditor\n                      onSave={this.addCard}\n                      onCancel={this.toggleAddingCard}\n                      adding\n                    />\n                  ) : (\n                    <div className=\"Toggle-Add-Card\" onClick={this.toggleAddingCard}>\n                      <ion-icon name=\"add\" /> Add a card\n                    </div>\n                  )}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);\n","import \"../styles/AddList.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListEditor from \"./ListEditor\";\nimport shortid from \"shortid\";\nimport EditButtons from \"./EditButtons\";\n\nclass AddList extends Component {\n  state = {\n    title: \"\"\n  };\n\n  handleChangeTitle = e => this.setState({ title: e.target.value });\n\n  createList = async () => {\n    const { title } = this.state;\n    const { dispatch } = this.props;\n\n    this.props.toggleAddingList();\n\n    dispatch({\n      type: \"ADD_LIST\",\n      payload: { listId: shortid.generate(), listTitle: title }\n    });\n  };\n\n  render() {\n    const { toggleAddingList } = this.props;\n    const { title } = this.state;\n\n    return (\n      <div className=\"Add-List-Editor\">\n        <ListEditor\n          title={title}\n          handleChangeTitle={this.handleChangeTitle}\n          onClickOutside={toggleAddingList}\n          saveList={this.createList}\n        />\n\n        <EditButtons\n          handleSave={this.createList}\n          saveLabel={\"Add list\"}\n          handleCancel={toggleAddingList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect()(AddList);\n","import \"../styles/Board.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport List from \"./List\";\nimport AddList from \"./AddList\";\n\nclass Board extends Component {\n  state = {\n    addingList: false\n  };\n\n  toggleAddingList = () =>\n    this.setState({ addingList: !this.state.addingList });\n\n  handleDragEnd = ({ source, destination, type }) => {\n    // dropped outside the allowed zones\n    if (!destination) return;\n\n    const { dispatch } = this.props;\n\n    // Move list\n    if (type === \"COLUMN\") {\n      // Prevent update if nothing has changed\n      if (source.index !== destination.index) {\n        dispatch({\n          type: \"MOVE_LIST\",\n          payload: {\n            oldListIndex: source.index,\n            newListIndex: destination.index\n          }\n        });\n      }\n      return;\n    }\n\n    // Move card\n    if (\n      source.index !== destination.index ||\n      source.droppableId !== destination.droppableId\n    ) {\n      dispatch({\n        type: \"MOVE_CARD\",\n        payload: {\n          sourceListId: source.droppableId,\n          destListId: destination.droppableId,\n          oldCardIndex: source.index,\n          newCardIndex: destination.index\n        }\n      });\n    }\n  };\n\n  render() {\n    const { board } = this.props;\n    const { addingList } = this.state;\n\n    return (\n      <DragDropContext onDragEnd={this.handleDragEnd}>\n        <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\n          {(provided, _snapshot) => (\n            <div className=\"Board\" ref={provided.innerRef}>\n              {board.lists.map((listId, index) => {\n                return <List listId={listId} key={listId} index={index} />;\n              })}\n\n              {provided.placeholder}\n\n              <div className=\"Add-List\">\n                {addingList ? (\n                  <AddList toggleAddingList={this.toggleAddingList} />\n                ) : (\n                  <div\n                    onClick={this.toggleAddingList}\n                    className=\"Add-List-Button\"\n                  >\n                    <ion-icon name=\"add\" /> Add a list\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ board: state.board });\n\nexport default connect(mapStateToProps)(Board);\n","import \"../styles/App.css\";\n\nimport React, { Component } from \"react\";\nimport Board from \"./Board\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Header\">Trello</div>\n\n        <Board />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\nimport throttle from \"lodash.throttle\";\nimport seed from \"./seed\";\n\nconst board = (state = { lists: [] }, action) => {\n    switch (action.type) {\n        case \"ADD_LIST\": {\n            const { listId } = action.payload;\n            return { lists: [...state.lists, listId] };\n        }\n        case \"MOVE_LIST\": {\n            const { oldListIndex, newListIndex } = action.payload;\n            const newLists = Array.from(state.lists);\n            const [removedList] = newLists.splice(oldListIndex, 1);\n            newLists.splice(newListIndex, 0, removedList);\n            return { lists: newLists };\n        }\n        case \"DELETE_LIST\": {\n            const { listId } = action.payload;\n            const filterDeleted = tmpListId => tmpListId !== listId;\n            const newLists = state.lists.filter(filterDeleted);\n            return { lists: newLists };\n        }\n        default:\n            return state;\n    }\n};\n\nconst listsById = (state = {}, action) => {\n    switch (action.type) {\n        case \"ADD_LIST\": {\n            const { listId, listTitle } = action.payload;\n            return {\n                ...state,\n                [listId]: { _id: listId, title: listTitle, cards: [] }\n            };\n        }\n        case \"CHANGE_LIST_TITLE\": {\n            const { listId, listTitle } = action.payload;\n            console.log(\"CHANGE_LIST_TITLE ACtion\",listId, listTitle);\n            return {\n                ...state,\n                [listId]: { ...state[listId], title: listTitle }\n            };\n        }\n        case \"DELETE_LIST\": {\n            const { listId } = action.payload;\n            const { [listId]: deletedList, ...restOfLists } = state;\n            return restOfLists;\n        }\n        case \"ADD_CARD\": {\n            const { listId, cardId } = action.payload;\n            return {\n                ...state,\n                [listId]: { ...state[listId], cards: [...state[listId].cards, cardId] }\n            };\n        }\n        case \"MOVE_CARD\": {\n            const {\n                oldCardIndex,\n                newCardIndex,\n                sourceListId,\n                destListId\n            } = action.payload;\n            // Move within the same list\n            if (sourceListId === destListId) {\n                const newCards = Array.from(state[sourceListId].cards);\n                const [removedCard] = newCards.splice(oldCardIndex, 1);\n                newCards.splice(newCardIndex, 0, removedCard);\n                return {\n                    ...state,\n                    [sourceListId]: { ...state[sourceListId], cards: newCards }\n                };\n            }\n            // Move card from one list to another\n            const sourceCards = Array.from(state[sourceListId].cards);\n            const [removedCard] = sourceCards.splice(oldCardIndex, 1);\n            const destinationCards = Array.from(state[destListId].cards);\n            destinationCards.splice(newCardIndex, 0, removedCard);\n            return {\n                ...state,\n                [sourceListId]: { ...state[sourceListId], cards: sourceCards },\n                [destListId]: { ...state[destListId], cards: destinationCards }\n            };\n        }\n        case \"DELETE_CARD\": {\n            const { cardId: deletedCardId, listId } = action.payload;\n            const filterDeleted = cardId => cardId !== deletedCardId;\n            return {\n                ...state,\n                [listId]: {\n                    ...state[listId],\n                    cards: state[listId].cards.filter(filterDeleted)\n                }\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nconst cardsById = (state = {}, action) => {\n    switch (action.type) {\n        case \"ADD_CARD\": {\n            const { cardText, cardId } = action.payload;\n            return { ...state, [cardId]: { text: cardText, _id: cardId } };\n        }\n        case \"CHANGE_CARD_TEXT\": {\n            const { cardText, cardId } = action.payload;\n            return { ...state, [cardId]: { ...state[cardId], text: cardText } };\n        }\n        case \"DELETE_CARD\": {\n            const { cardId } = action.payload;\n            const { [cardId]: deletedCard, ...restOfCards } = state;\n            return restOfCards;\n        }\n        // Find every card from the deleted list and remove it\n        case \"DELETE_LIST\": {\n            const { cards: cardIds } = action.payload;\n            return Object.keys(state)\n                .filter(cardId => !cardIds.includes(cardId))\n                .reduce(\n                    (newState, cardId) => ({ ...newState, [cardId]: state[cardId] }),\n                    {}\n                );\n        }\n        default:\n            return state;\n    }\n};\n\nconst reducers = combineReducers({\n    board,\n    listsById,\n    cardsById\n});\n\nconst saveState = state => {\n    console.log(state)\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"state\", serializedState);\n    } catch {\n        console.log(state)\n        // ignore write errors\n    }\n};\n\nconst loadState = () => {\n    try {\n        const serializedState = localStorage.getItem(\"state\");\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst persistedState = loadState();\nconst store = createStore(reducers, persistedState);\n\nstore.subscribe(\n    throttle(() => {\n        saveState(store.getState());\n    }, 1000)\n);\n\nconsole.log(store.getState());\nif (!store.getState().board.lists.length) {\n    console.log(\"SEED\");\n    seed(store);\n}\n\nexport default store;","import shortid from \"shortid\";\n\nexport default function seed(store) {\n    console.log(\"Insert first list\");\n    const firstListId = shortid.generate();\n\n    store.dispatch({\n        type: \"ADD_LIST\",\n        payload: { listId: firstListId, listTitle: \"First list\" }\n    });\n\n    store.dispatch({\n        type: \"ADD_CARD\",\n        payload: {\n            listId: firstListId,\n            cardId: shortid.generate(),\n            cardText: \"First card\"\n        }\n    });\n\n    store.dispatch({\n        type: \"ADD_CARD\",\n        payload: {\n            listId: firstListId,\n            cardId: shortid.generate(),\n            cardText: \"Second card\"\n        }\n    });\n\n    console.log(\"Insert second list\");\n    const secondListId = shortid.generate();\n\n    store.dispatch({\n        type: \"ADD_LIST\",\n        payload: { listId: secondListId, listTitle: \"Second list\" }\n    });\n\n    store.dispatch({\n        type: \"ADD_CARD\",\n        payload: {\n            listId: secondListId,\n            cardId: shortid.generate(),\n            cardText: \"Card 1\"\n        }\n    });\n\n    store.dispatch({\n        type: \"ADD_CARD\",\n        payload: {\n            listId: secondListId,\n            cardId: shortid.generate(),\n            cardText: \"Card 2\"\n        }\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}